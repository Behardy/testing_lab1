{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body{\\n    background:rgb(179, 95, 179);\\n    \\n}\\nh2{\\n    -webkit-text-decoration-color: aqua;\\n            text-decoration-color: aqua;\\n}\\ndiv{\\n    background: white;\\n    width:150px ;\\n}\\nbutton{\\n    width: 50px;\\n    background-color: black;\\n    color:whitesmoke; \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0QkFBNEI7O0FBRWhDO0FBQ0E7SUFDSSxtQ0FBMkI7WUFBM0IsMkJBQTJCO0FBQy9CO0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksV0FBVztJQUNYLHVCQUF1QjtJQUN2QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XG4gICAgYmFja2dyb3VuZDpyZ2IoMTc5LCA5NSwgMTc5KTtcbiAgICBcbn1cbmgye1xuICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogYXF1YTtcbn1cblxuZGl2e1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIHdpZHRoOjE1MHB4IDtcbn1cbmJ1dHRvbntcbiAgICB3aWR0aDogNTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICBjb2xvcjp3aGl0ZXNtb2tlOyBcbn0iXX0= */\"","module.exports = \"<body>\\n<h1>Anime Shop</h1>\\n<h3>Shopping Cart</h3>\\n<form #itemsForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNewItem(itemsForm)\\\">\\n\\n    <label for=\\\"\\\">Product</label>\\n    <input type=\\\"text\\\" ngModel name=\\\"product\\\">\\n\\n    <label for=\\\"\\\">Price</label>\\n    <input type=\\\"number\\\" ngModel name=\\\"price\\\">\\n\\n    <label for=\\\"\\\">Quantity</label>\\n    <input type=\\\"number\\\" ngModel name=\\\"quantity\\\">\\n\\n    <button>Add</button>\\n</form>\\n\\n<div *ngFor=\\\" let item of items,index as i\\\">\\n    <p>Id:{{item.id}}</p>\\n    <p>Product:{{item.product}}</p>\\n    <p>Price:{{item.price}}</p>\\n    <p>Quantity:{{item.quantity}}</p>\\n\\n    <button (click)=\\\"removeAnItem(item.id)\\\">X</button>\\n    <button (click)=\\\"toggleForm(i)\\\">Edit</button>\\n\\n\\n    <form *ngIf=\\\"item.itemUpdated\\\" #updateForm=\\\"ngForm\\\" \\n    (ngSubmit)=\\\"[updateAnItem(item), toggleForm(i)]\\\">\\n        <!-- <label for=\\\"\\\">Product</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"item.product\\\" name=\\\"product\\\">\\n\\n        <label for=\\\"\\\">Price</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"item.price\\\" name=\\\"price\\\"> -->\\n\\n        <label for=\\\"\\\">Quantity</label>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"item.quantity\\\" name=\\\"quantity\\\">\\n\\n        <button>Save Updated</button>\\n\\n    </form>\\n</div>\\n\\n    \\n</body>\"","import { Component } from '@angular/core';\nimport { CartService } from './cart.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  items: any;\n  shouldBeHidden: boolean = true;\n\n\n  constructor(private cartService: CartService) {\n    this.cartService.getAllItems().subscribe(response => {\n      this.items = response;\n    });\n  }\n  toggleForm(index) {\n    this.items[index].itemUpdated = !this.items[index].itemUpdated;\n    console.log(this.items[index]);\n\n    this.shouldBeHidden = !this.shouldBeHidden;\n  };\n\n  addNewItem(form) {\n    this.cartService.addItems(form.value).subscribe(response => {\n      this.items = response;\n    });\n  }\n\n  removeAnItem(id) {\n    this.cartService.removeItem(id).subscribe(response => {\n      this.items = response;\n    });\n  }\n  updateAnItem(item) {\n    this.cartService.updateItem(item).subscribe(response => {\n      this.items = response;\n    });\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CartService } from \"./cart.service\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [CartService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private http: HttpClient) {}\n\n\n  getAllItems(){\n    return this.http.get(\"/api/shoppingcart\", { responseType: \"json\" });\n  }\n  addItems(newItem){\n    return this.http.post(\"/api/shoppingcart\",newItem, { responseType:\"json\"})\n  }\n  removeItem(id){\n    return this.http.delete(`/api/shoppingcart/${id}`, {responseType: \"json\"})\n  }\nupdateItem(item){\n  return this.http.put(`/api/shoppingcart/${item.id}`,item, {responseType: \"json\"})\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}